{"version":3,"sources":["components/Navbar/Navbar.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonList/PersonList.tsx","components/PersonPage/PersonPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","isActive","classNames","to","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PersonList","personas","selectedPersonId","isSelected","map","mother","find","mom","motherName","father","dad","fatherName","born","died","PersonPage","useState","setPersonas","isError","setIsError","isLoading","setIsLoading","useParams","getPersonasFromServer","serverData","useEffect","length","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.676e5c4e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <div className=\"navbar-brand\">\n      <NavLink\n        className={({ isActive }) => classNames(\n          'navbar-item',\n          { 'has-background-grey-lighter': isActive },\n        )}\n        to=\"/\"\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        className={({ isActive }) => classNames(\n          'navbar-item',\n          { 'has-background-grey-lighter': isActive },\n        )}\n        to=\"/people\"\n      >\n        People\n      </NavLink>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  personas: Person[],\n  selectedPersonId: string,\n};\n\nexport const PersonList: React.FC<Props> = ({\n  personas,\n  selectedPersonId,\n}) => {\n  const isSelected = (person: Person) => person.slug === selectedPersonId;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {personas.map(person => {\n          const mother = personas.find(mom => mom.name === person.motherName);\n          const father = personas.find(dad => dad.name === person.fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={classNames(\n                { 'has-background-warning': isSelected(person) },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td className={classNames(\n                { 'has-text-danger': person.sex === 'f' },\n              )}\n              >\n                {person.sex}\n              </td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : `${person.motherName || '-'}`}\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : `${person.fatherName || '-'}`}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonList } from '../PersonList';\n\nexport const PersonPage = () => {\n  const [personas, setPersonas] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { slug = '' } = useParams();\n\n  const getPersonasFromServer = async () => {\n    setIsLoading(true);\n\n    try {\n      const serverData = await getPeople();\n\n      setPersonas(serverData);\n    } catch {\n      // console.log('data didnt download from server');\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPersonasFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {/* <Loader /> */}\n          { isLoading\n            ? (<Loader />)\n            : (\n              <>\n                {isError\n                  ? (\n                    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                      Something went wrong\n                    </p>\n                  ) : (\n                    <PersonList personas={personas} selectedPersonId={slug} />\n                  ) }\n\n                {!personas.length && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n// import { Loader } from './components/Loader';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\nimport { PersonPage } from './components/PersonPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <Navbar />\n        </div>\n      </nav>\n\n      <main className=\"section\">\n\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n            <Route path=\"people\">\n              <Route\n                index\n                element={<PersonPage />}\n              />\n              <Route\n                path=\":slug\"\n                element={<PersonPage />}\n              />\n            </Route>\n            <Route\n              path=\"people/:slug\"\n              element={<PersonPage />}\n            />\n\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}