{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NavLinkPage/NavLinkPage.tsx","components/Navbar/Navbar.tsx","components/PageNotFound/PageNotFound.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonList/PersonList.tsx","components/PersonPage/PersonPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NavLinkPage","link","title","isActive","classNames","to","Navbar","PageNotFound","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PersonList","people","selectedPersonId","isSelected","map","born","died","mother","motherName","father","fatherName","PersonPage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useParams","getPeopleFromServer","serverData","addParents","find","mom","dad","useEffect","length","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8f67a946.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  link: string,\n  title: string,\n};\n\nexport const NavLinkPage:React.FC<Props> = ({ link, title }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={link}\n  >\n    {title}\n  </NavLink>\n);\n","import { NavLinkPage } from '../NavLinkPage';\n\nexport const Navbar = () => {\n  return (\n    <div className=\"navbar-brand\">\n      <NavLinkPage link=\"/\" title=\"Home\" />\n      <NavLinkPage link=\"/people\" title=\"People\" />\n    </div>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n  selectedPersonId: string,\n};\n\nexport const PersonList: React.FC<Props> = ({\n  people,\n  selectedPersonId,\n}) => {\n  const isSelected = (person: Person) => person.slug === selectedPersonId;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={classNames(\n                { 'has-background-warning': isSelected(person) },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td className={classNames(\n                { 'has-text-danger': person.sex === 'f' },\n              )}\n              >\n                {person.sex}\n              </td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.mother\n                  ? <PersonLink person={person.mother} />\n                  : `${person.motherName || '-'}`}\n              </td>\n              <td>\n                {person.father\n                  ? <PersonLink person={person.father} />\n                  : `${person.fatherName || '-'}`}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonList } from '../PersonList';\n\nexport const PersonPage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { slug = '' } = useParams();\n  const getPeopleFromServer = async () => {\n    setIsLoading(true);\n\n    try {\n      const serverData = await getPeople();\n      const addParents = serverData.map(person => {\n        const mother: Person | null\n          = serverData.find(mom => mom.name === person.motherName) || null;\n        const father: Person | null\n          = serverData.find(dad => dad.name === person.fatherName) || null;\n\n        return { ...person, mother, father };\n      });\n\n      setPeople(addParents);\n    } catch {\n      // console.log('data didnt download from server');\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {/* <Loader /> */}\n          { isLoading\n            ? (<Loader />)\n            : (\n              <>\n                {isError\n                  ? (\n                    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                      Something went wrong\n                    </p>\n                  ) : (\n                    <PersonList people={people} selectedPersonId={slug} />\n                  ) }\n\n                {!people.length && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n// import { Loader } from './components/Loader';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { Navbar } from './components/Navbar';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PersonPage } from './components/PersonPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <Navbar />\n        </div>\n      </nav>\n\n      <main className=\"section\">\n\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<PageNotFound />}\n            />\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n            <Route path=\"people\">\n              <Route\n                index\n                element={<PersonPage />}\n              />\n              <Route\n                path=\":slug\"\n                element={<PersonPage />}\n              />\n            </Route>\n            <Route\n              path=\"people/:slug\"\n              element={<PersonPage />}\n            />\n\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}